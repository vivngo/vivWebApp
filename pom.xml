<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>vivWebApp</groupId>
	<artifactId>vivWebApp</artifactId>
	<version>0.9</version>
	<packaging>war</packaging>

	<dependencies>
		<!--test-->
		<!--Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.2.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.3.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>3.2.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>3.2.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>3.2.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.2.2.RELEASE</version>
		</dependency>

		<!-- JSON helpers -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.12</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.2</version>
		</dependency>

		<!-- Persistance -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.2.2.Final</version>
		</dependency>

		<!-- DB Drivers -->
		<!-- <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> 
			<version>5.1.25</version> </dependency> -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.3.2</version>
		</dependency>

		<!-- Connection Pooling -->
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1.2</version>
		</dependency>

		<!-- Web container API -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>		

		<!-- Utils -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.2</version>
		</dependency>
		
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.11</version>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
	      <plugins>
	        <plugin>
	          <groupId>org.apache.maven.plugins</groupId>
	          <artifactId>maven-surefire-plugin</artifactId>
	          <version>2.18.1</version>
	        </plugin>
	      </plugins>
	    </pluginManagement>	
		<sourceDirectory>src</sourceDirectory>
		<resources>
		    <resource>
		        <directory>src</directory>
		        <includes>
		            <include>**/*.properties</include>
		            <include>**/*.xml</include>
		        </includes>
		    </resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<warSourceDirectory>WebContent</warSourceDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <version>2.18.1</version>
			    <dependencies>
			      <dependency>
			        <groupId>org.apache.maven.surefire</groupId>
			        <artifactId>surefire-junit4</artifactId>
			        <version>2.18.1</version>
			      </dependency>
			    </dependencies>
		  	</plugin>
		  	<plugin>
            	<groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-surefire-report-plugin</artifactId>
	            <version>2.15</version>
	        </plugin>

	        <!-- for casperjs testing -->
	        <!-- (1) install PhantomJS -->
	        <plugin>
			  	<groupId>com.github.klieber</groupId>
			  	<artifactId>phantomjs-maven-plugin</artifactId>
			  	<executions>
			    	<execution>
			      		<goals>
			        		<goal>install</goal>
			    		</goals>
			    	</execution>
			  	</executions>
			  	<configuration>
			   		<version>1.9.2</version>
	  			</configuration>
			</plugin>
			<!-- (2) install CasperJS -->
			<plugin>
			 	<groupId>com.googlecode.maven-download-plugin</groupId>
			 	<artifactId>download-maven-plugin</artifactId>
			 	<version>1.2.1</version>
			 	<executions>
			  		<execution>
			   			<id>install-casperjs</id>
			   			<phase>pre-integration-test</phase>
			   			<goals>
			    			<goal>wget</goal>
			   			</goals>
			   			<configuration>
			    			<url>https://github.com/n1k0/casperjs/archive/master.zip</url>
			    			<unpack>true</unpack>
			    			<outputdirectory>${project.build.directory}</outputdirectory>
			    			<overwrite>false</overwrite>
			   			</configuration>
			  		</execution>
			 	</executions>
			</plugin>
 			<!-- (3) Reserve TCP Port -->
			<!-- <plugin>
			  	<groupId>org.codehaus.mojo</groupId>
			  	<artifactId>build-helper-maven-plugin</artifactId>
			  	<executions>
			    	<execution>
			      		<id>tomcat-port</id>
			      		<goals>
			        		<goal>reserve-network-port</goal>
			      		</goals>
			      		<configuration>
			        		<portNames>
			          			<portName>tomcat.port</portName>
			        		</portNames>
			      		</configuration>
			    	</execution>
			  	</executions>
			</plugin> -->
			<!-- (4) Start Tomcat -->
<!-- 			<plugin>
			  	<groupId>org.apache.tomcat.maven</groupId>
			  	<artifactId>tomcat7-maven-plugin</artifactId>
			  	<configuration>
			    	<path>/</path>
			  	</configuration>
			  	<executions>
			    	<execution>
			      		<id>start-tomcat</id>
			      		<phase>pre-integration-test</phase>
			      		<goals>
			        		<goal>run-war-only</goal>
			      		</goals>
			      		<configuration>
			        		<port>${tomcat.port}</port>
			        		<fork>true</fork>
			      		</configuration>
			    	</execution>
			  	</executions>
			</plugin>  -->
			<!-- (5) Run CasperJS -->
			<plugin>
			  	<groupId>org.codehaus.mojo</groupId>
			  	<artifactId>exec-maven-plugin</artifactId>
			  	<version>1.4.0</version>
			  	<executions>
			    	<execution>
			      		<id>casperjs-test</id>
			      		<phase>integration-test</phase>
			      		<goals>
			        		<goal>exec</goal>
			      		</goals>
			      		<configuration>
			        		<executable>${project.build.directory}/casperjs-master/bin/casperjs.exe</executable>
			        		<workingDirectory>${basedir}</workingDirectory>
			        		<arguments>
			          			<argument>test</argument>
			          			<argument>--verbose</argument>
			          			<argument>--no-colors</argument>
			          			<argument>--concise</argument>
			          			<argument>--home=http://localhost:8080</argument>
			          			<argument>${basedir}/src/test/casperjs</argument>
			        		</arguments>
			        		<environmentVariables>
			          			<PHANTOMJS_EXECUTABLE>${phantomjs.binary}</PHANTOMJS_EXECUTABLE>
			        		</environmentVariables>
			      		</configuration>
			    	</execution>
			  	</executions>
			</plugin>
 			<!-- (6) Shutdown Tomcat -->
<!-- 			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<executions>
				    <execution>
				    	<id>stop-tomcat</id>
				    	<phase>post-integration-test</phase>
				    	<goals>
				        	<goal>shutdown</goal>
				    	</goals>
				    </execution>
				</executions>
			</plugin> -->
		</plugins>
	</build>

</project>